//
//  TodayInteractor.swift
//  Ecobalance life
//
//  Created by Artem on 20.06.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import ParseSwift

protocol TodayBusinessLogic
{
    typealias ChecklistResult = ((Result<[Checklist], ParseError>) -> Void)

    func getChecklist(cb: @escaping ChecklistResult)

}

protocol TodayDataStore
{
    //var name: String { get set }
}

class TodayInteractor: TodayBusinessLogic, TodayDataStore
{
    var presenter: TodayPresentationLogic?
    var worker: TodayWorker?

    func getChecklist(cb: @escaping ChecklistResult) {
        if appDelegate.isConnectedToServer() {
            
            let cloud = GetChecklistCloud()
            cloud.runFunction { [weak self] result in
                switch result {
                case .success(let checklist):
                    let ch = checklist.map{ "\($0.objectId) -- \($0.isCompleted)" }
                    print(ch)
                    cb(.success(checklist))
                case .failure(let error):
                    let res = HabitList.Response(type: .failure(.parseError(error: error)))
//                    self?.presenter?.presentResponse(response: res)
                    print(error)
                    cb(.failure(error))
                }
            }
            
            
//            DispatchQueue.global().async {
//                let query = Checklist.query()
//                query.findAll { result in
//                    switch result {
//                    case .success(let checklist):
//                        cb(.success(checklist))
//                    case .failure(let error):
//                        print(error)
//                        cb(.failure(error))
//                    }
//                }
//            }
            
        } else {
            Log("server is not reachable", type: .error)
        }
    }
}

struct GetChecklistCloud: ParseCloud {
    typealias ReturnType = [Checklist]
    var functionJobName = "getChecklist"
}
